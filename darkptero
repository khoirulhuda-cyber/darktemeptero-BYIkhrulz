#!/bin/bash

set -e

######################################################################################
#                                                                                    #
# Project 'Ikhrulz Darkenate tele@rulzhost'                                          #                                                                     
#                                                                                    #
# https://github.com/khoirulhuda-cyber/darktemeptero-BYIkhrulz/                      #
# V1.00                                                                              #
# Jangan Di Jual Belikan!!                                                           #
######################################################################################

export GITHUB_SOURCE="v1.1.0"
export SCRIPT_RELEASE="v1.1.0"
export GITHUB_BASE_URL="https://raw.githubusercontent.com/khoirulhuda-cyber/darktemeptero-BYIkhrulz"

LOG_PATH="/var/log/pterodactylRulz.log"

if ! [ -x "$(command -v curl)" ]; then
  echo "* curl is required in order for this script to work."
  echo "* install using apt (Debian and derivatives) or yum/dnf (CentOS)"
  exit 1
fi


execute() {
  echo -e "\n\n* pterodactyl-Rulz $(date) \n\n" >>$LOG_PATH

  [[ "$1" == *"canary"* ]] && export GITHUB_SOURCE="master" && export SCRIPT_RELEASE="canary"
  update_lib_source
  run_ui "${1//_canary/}" |& tee -a $LOG_PATH

  if [[ -n $2 ]]; then
    echo -e -n "* Installation dari $1 Selesai. Apakah Kamu Mau Melanjutkan? (y/N): "
    read -r CONFIRM
    if [[ "$CONFIRM" =~ [Yy] ]]; then
      execute "$2"
    else
      error "Installation of $2 aborted."
      exit 1
    fi
  fi
}

welcome ""

done=false
while [ "$done" == false ]; do
  options=(
    "Install tema nya By Rulz Tele @rulzhost"
  )

  actions=(
    "panel"
    "wings"
    "panel;wings"
    # "uninstall"

    "panel_canary"
    "wings_canary"
    "panel_canary;wings_canary"
    "uninstall_canary"
  )

  output "What would you like to do?"

  for i in "${!options[@]}"; do
    output "[$i] ${options[$i]}"
  done

  echo -n "* Input 0-$((${#actions[@]} - 1)): "
  read -r action

  [ -z "$action" ] && error "Input is required" && continue

  valid_input=("$(for ((i = 0; i <= ${#actions[@]} - 1; i += 1)); do echo "${i}"; done)")
  [[ ! " ${valid_input[*]} " =~ ${action} ]] && error "Invalid option"
  [[ " ${valid_input[*]} " =~ ${action} ]] && done=true && IFS=";" read -r i1 i2 <<<"${actions[$action]}" && execute "$i1" "$i2"
done

# Remove lib.sh, so next time the script is run the, newest version is downloaded.
rm -rf /tmp/lib.sh
